version: '3.9'

services:
  bibliotheca:
    container_name: bibliotheca
    hostname: bibliotheca
    image: bibliotheca:dev
    build:
      dockerfile: docker/Dockerfile
      context: ..
    environment:
      DB_HOST: bibpostgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: postgres
      DATABASE_URL: "postgres://postgres:${POSTGRES_PASSWORD}@bibpostgres:5432/postgres"
    ports:
      - "8051:8051"
    networks:
      - db
    develop:
      watch:
        - path: ../service
          action: rebuild
    restart: always
  db:
    container_name: postgres
    image: postgres:16-alpine
    hostname: bibpostgres
    user: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data
      POSTGRES_DB: postgres
    volumes:
      - db:/var/lib/postgresql/data
    ports:
      - "5332:5432"
    networks:
      - db
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres" ]
      interval: 30s
      timeout: 10s
      retries: 5

  minio:
    container_name: minio
    image: minio/minio:latest
    hostname: minio
    command: server /data/minio --console-address ":9001"
    expose:
      - "9000"
      - "9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_USER}
      MINIO_ROOT_PASSWORD: ${MINO_PASSWORD}
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - minio:/data/minio

networks:
  db:
    driver: bridge
volumes:
  db:
    name: bib_postgres
  minio:

